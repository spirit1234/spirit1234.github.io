<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>嵩山石&#39;s blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://songshanshi.github.io/"/>
  <updated>2018-10-08T15:45:02.367Z</updated>
  <id>https://songshanshi.github.io/</id>
  
  <author>
    <name>嵩山石</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Panther ctf</title>
    <link href="https://songshanshi.github.io/2018/10/08/Panther%20CTF/"/>
    <id>https://songshanshi.github.io/2018/10/08/Panther CTF/</id>
    <published>2018-10-08T14:35:16.000Z</published>
    <updated>2018-10-08T15:45:02.367Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>第一次写writeup开始记录在我的博客<br>这次没有做一道题就写writeup所以有些题忘了，<br>下次比赛一定做一道写一道writeup</p><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><h4 id="你会解压吗"><a href="#你会解压吗" class="headerlink" title="你会解压吗"></a>你会解压吗</h4><p><a href="https://pan.baidu.com/s/14LHEPaYgXaq0XKf7k0aO8g" target="_blank" rel="noopener">flag99.zip</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">for i in &#123;1..100&#125;</span><br><span class="line">do</span><br><span class="line">x=$((100-$i))</span><br><span class="line">unzip ./flag$x.zip</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><h4 id="zzzzip"><a href="#zzzzip" class="headerlink" title="zzzzip?"></a>zzzzip?</h4><p><a href="https://pan.baidu.com/s/14LHEPaYgXaq0XKf7k0aO8g" target="_blank" rel="noopener">flag.zip</a></p><p>用ziperello爆破出5位的密码<br>然后用十六进制编辑器发现flag</p><h4 id="So-many-flag"><a href="#So-many-flag" class="headerlink" title="So many flag!"></a>So many flag!</h4><p><a href="https://pan.baidu.com/s/14LHEPaYgXaq0XKf7k0aO8g" target="_blank" rel="noopener">lag .txt</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">file=open(<span class="string">"E:\\flag.txt"</span>,mode=<span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">flag=file.read()</span><br><span class="line">flag1=re.split(<span class="string">r"&#125;pctf&#123;"</span>,flag)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag1:</span><br><span class="line">    <span class="comment"># print(i)</span></span><br><span class="line">    <span class="keyword">if</span> len(i)==<span class="number">20</span>:</span><br><span class="line">        a=re.match(<span class="string">r"^[a-z][A-Z][0-9].+[a-z][A-Z][a-z]$"</span>,i)</span><br><span class="line">        print(a)</span><br><span class="line">        print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(flag1)</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><h4 id="出题人的心思"><a href="#出题人的心思" class="headerlink" title="出题人的心思"></a>出题人的心思</h4><p><img src="/2018/10/08/Panther CTF/nick.png" alt="Alt text"><br>题目是一张jpg图片用binwalk打开发现还有一张png图片<br>然后用kali自带的分离工具将图片分开，再用十六进制改变png图片的高度，看到flag</p><h3 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h3><h4 id="just-so-so"><a href="#just-so-so" class="headerlink" title="just so so!"></a>just so so!</h4><pre><code>题目描述:    密文：706374667b686868685f546831735f4833785f636f64657d答案格式: pctf{xxxxxxxxxxxxx}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">ab=<span class="string">"70,63,74,66,7b,68,68,68,68,5f,54,68,31,73,5f,48,33,78,5f,63,6f,64,65,7d"</span></span><br><span class="line">ac=re.split(<span class="string">","</span>,<span class="string">"70,63,74,66,7b,68,68,68,68,5f,54,68,31,73,5f,48,33,78,5f,63,6f,64,65,7d"</span>)</span><br><span class="line"></span><br><span class="line">print(ac)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ac:</span><br><span class="line"></span><br><span class="line">    print(chr(eval(i)))</span><br></pre></td></tr></table></figure><p>pctf{hhhh_Th1S_H3x_code}</p><h4 id="被加密了的flag"><a href="#被加密了的flag" class="headerlink" title="被加密了的flag"></a>被加密了的flag</h4><pre><code>题目描述:    cpgs{Gu1f_1F_Ebg_1r}答案格式: pctf{xxxxxxxxxxxxx}</code></pre><p>忘记细节了，思路是26个字母表中间对折然后替换相应的字母<br>就转换出pctf了</p><h4 id="My-math-is-very-poor"><a href="#My-math-is-very-poor" class="headerlink" title="My math is very poor"></a>My math is very poor</h4><p>题目描述:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line">data = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">flag = [] <span class="comment">#[x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x]</span></span><br><span class="line">a = <span class="number">9</span></span><br><span class="line">b = <span class="number">13</span></span><br><span class="line"><span class="keyword">assert</span> len(flag) == <span class="number">17</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Encrypt : '</span>,</span><br><span class="line">    enc = <span class="string">''</span></span><br><span class="line">    enc_array = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag)):</span><br><span class="line">        tmp=(a*flag[i]+b)%<span class="number">26</span></span><br><span class="line">        enc_array.append(tmp)</span><br><span class="line">        enc += data[tmp]</span><br><span class="line">    <span class="keyword">print</span> enc <span class="comment"># yyynvjlpjccyxginp</span></span><br><span class="line">    <span class="keyword">print</span> enc_array </span><br><span class="line">|<span class="comment"># [24,24,24,13,21,9,11,15,9,2,2,24,23,6,8,13,15]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    encrypt()</span><br></pre></td></tr></table></figure></p><ul><li>答案格式: pctf{xxxxxxxxxxxxx}</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"> -*- coding: utf<span class="number">-8</span> -*-</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_lowercase <span class="keyword">as</span> lowercase</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_uppercase <span class="keyword">as</span> uppercase</span><br><span class="line"></span><br><span class="line">frequencyTable = [<span class="number">4</span>, <span class="number">19</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">7</span>, <span class="number">3</span>, \</span><br><span class="line">                  <span class="number">11</span>, <span class="number">2</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">24</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">21</span>, \</span><br><span class="line">                  <span class="number">10</span>, <span class="number">23</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除预留的标点</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本过滤</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_filter</span><span class="params">(text)</span>:</span></span><br><span class="line">    text = text.lower()</span><br><span class="line">    result = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(text)):</span><br><span class="line">        <span class="keyword">if</span> lowercase.find(text[i]) != <span class="number">-1</span>:</span><br><span class="line">            result += text[i]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密部分</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encryption</span><span class="params">(plaintext, k1, k2)</span>:</span></span><br><span class="line">    plaintext = text_filter(plaintext)</span><br><span class="line">    result = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plaintext)):</span><br><span class="line">        index = lowercase.find(plaintext[i])</span><br><span class="line">        c_index = (k1 * index + k2) % <span class="number">26</span></span><br><span class="line">        result += uppercase[c_index]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密部分</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_inverse</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    #求a关于模b的逆元</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">1</span> <span class="keyword">and</span> b == <span class="number">0</span>):</span><br><span class="line">        x = <span class="number">1</span></span><br><span class="line">        y = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> x, y</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        xx, yy = get_inverse(b, a % b)</span><br><span class="line">        x = yy</span><br><span class="line">        y = xx - a // b * yy</span><br><span class="line">        <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decryption</span><span class="params">(k1, k2, ciphertext)</span>:</span></span><br><span class="line">    k3 = get_inverse(k1, <span class="number">26</span>)[<span class="number">0</span>]</span><br><span class="line">    result = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ciphertext)):</span><br><span class="line">        index = lowercase.find(ciphertext[i])</span><br><span class="line">        p_index = k3 * (index - k2) % <span class="number">26</span></span><br><span class="line">        result += lowercase[p_index]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    ciphertext = <span class="string">"yyynvjlpjccyxginp"</span></span><br><span class="line">    print(Decryption(<span class="number">9</span>,<span class="number">13</span>,ciphertext))</span><br></pre></td></tr></table></figure><p>仿射密码看<a href="https://blog.csdn.net/sinat_34927324/article/details/79700703" target="_blank" rel="noopener">这个博客</a>的</p><p>其他题我也忘了。。。</p><h3 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h3><h4 id="软件破解第一步"><a href="#软件破解第一步" class="headerlink" title="软件破解第一步"></a>软件破解第一步</h4><p><a href="https://pan.baidu.com/s/14LHEPaYgXaq0XKf7k0aO8g" target="_blank" rel="noopener">Reverse11.exe</a></p><p>用ida打开就有flag了嘿嘿</p><h4 id="come-on"><a href="#come-on" class="headerlink" title="come on!"></a>come on!</h4><p><a href="https://pan.baidu.com/s/14LHEPaYgXaq0XKf7k0aO8g" target="_blank" rel="noopener">flag_file.pyo</a></p><p>这是一个Python的编译后加了防反编译模块<br>用 easy Python Decompiler这个工具解开就可以看到源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Embedded file name: /home/sliver/Documents/CTF/Python/python.py</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> py_compile</span><br><span class="line">py_compile.compile(<span class="string">'/home/sliver/Documents/CTF/Python/python.py'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">(message)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> message:</span><br><span class="line">        x = ord(i)</span><br><span class="line">        x = x - <span class="number">16</span></span><br><span class="line">        s += chr(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">correct = <span class="string">'RFhZJU8hY09AaU9DZlJaVVNk'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Input flag:'</span></span><br><span class="line">flag = raw_input()</span><br><span class="line"><span class="keyword">if</span> encode(flag) == correct:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'correct,this is my flag'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'wrong'</span></span><br></pre></td></tr></table></figure><p>然后用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">"p"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"RFhZJU8hY09AaU9DZlJaVVNk"</span>:</span><br><span class="line">    x=ord(i)</span><br><span class="line">    x=x+<span class="number">16</span></span><br><span class="line">    s+=chr(x)</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure><p>就可见flag</p><h4 id="input-flag"><a href="#input-flag" class="headerlink" title="input flag"></a>input flag</h4><p><a href="https://pan.baidu.com/s/14LHEPaYgXaq0XKf7k0aO8g" target="_blank" rel="noopener">Reverse3.exe</a><br>用ida打开f5大法 </p><p>发现DXY%O!cO@iOCfRZUSd 对flag进行处理后与这个字符串进行比较<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">"p"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"DXY%O!cO@iOCfRZUSd"</span>:</span><br><span class="line">    x=ord(i)</span><br><span class="line">    x=x+<span class="number">16</span></span><br><span class="line">    s+=chr(x)</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure></p><p>可解出flag</p><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="为什么这么简单"><a href="#为什么这么简单" class="headerlink" title="为什么这么简单"></a>为什么这么简单</h4><pre><code>答案格式: pctf{xxxxxxxxxxxxx}题目链接: 题目链接</code></pre><p>[题目链接]<a href="http://47.94.4.84/web/web1abf20c91a442da48.php" target="_blank" rel="noopener">http://47.94.4.84/web/web1abf20c91a442da48.php</a></p><p>用hackbar  post一个比66666大的数 （最快的方法了）</p><h4 id="i’m-so-sad"><a href="#i’m-so-sad" class="headerlink" title="i’m so sad"></a>i’m so sad</h4><p><a href="http://101.200.58.30/test1.php" target="_blank" rel="noopener">http://101.200.58.30/test1.php</a></p><p>base64对字符串解码可看到代码<br>发送get请求a[]=1$b[]=2 得到flag</p><h4 id="php-is-best-language"><a href="#php-is-best-language" class="headerlink" title="php is best language!"></a>php is best language!</h4><p><a href="http://47.94.4.84/web/web25d47c5d8a6299792.php" target="_blank" rel="noopener">http://47.94.4.84/web/web25d47c5d8a6299792.php</a></p><p>用hackbar post<br>magic_keys[]=1可得flag</p><p>pctf结束</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;第一次写writeup开始记录在我的博客&lt;br&gt;这次没有做一道题就写writeup所以有些题忘了，&lt;br&gt;下次比赛一定做一道写一道write
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ubuntu18.4安装一些软件时出现 Unable to correct problems, you have held broken packages</title>
    <link href="https://songshanshi.github.io/2018/06/09/%E8%A7%A3%E5%86%B3%E5%8C%85%E6%8D%9F%E5%9D%8F%E9%94%99%E8%AF%AF/"/>
    <id>https://songshanshi.github.io/2018/06/09/解决包损坏错误/</id>
    <published>2018-06-09T11:34:35.583Z</published>
    <updated>2018-06-09T11:33:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>这几天在看《揭秘家用路由器0day漏洞挖掘技术》下了ubuntu18.4，感觉Ubuntu还是不错的，发现没有Python2（mmp），安装是出现了Unable to correct problems, you have held broken packages问题（附图一张）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">Some packages could not be installed. This may mean that you have</span><br><span class="line">requested an impossible situation or <span class="keyword">if</span> you are using the unstable</span><br><span class="line">distribution that some required packages have not yet been created</span><br><span class="line">or been moved out of Incoming.</span><br><span class="line">The following information may <span class="built_in">help</span> to resolve the situation:</span><br><span class="line"></span><br><span class="line">The following packages have unmet dependencies:</span><br><span class="line"> python : PreDepends: python-minimal (= 2.7.12-1~16.04) but it is not going to be installed</span><br><span class="line">          Depends: python2.7 (&gt;= 2.7.12-1~) but it is not going to be installed</span><br><span class="line">E: Unable to correct problems, you have held broken packages.</span><br></pre></td></tr></table></figure><p>查了百度许多资料都是这么说</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get upgrade</span><br><span class="line"></span><br><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure><p>后来从<a href="https://askubuntu.com/questions/223237/unable-to-correct-problems-you-have-held-broken-packages" target="_blank" rel="noopener">这里</a><br>他这上面说aptitude解决，尝试后发现安装这个也有相同的问题，于是又用了下面的方法，成功了。<br>下面分享给大家：</p><p>用这条命令看你损坏的包然后卸载了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看包</span></span><br><span class="line">dpkg --get-selections | grep python</span><br><span class="line"><span class="comment">#卸载</span></span><br><span class="line">sudo apt-get remove libpython2.7</span><br><span class="line">sudo apt-get remove libpython2.7-minimal</span><br><span class="line">sudo apt-get remove libpython2.7-stdlib</span><br></pre></td></tr></table></figure></p><p>把有关的包都卸载了，让后再<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get insatll python</span><br></pre></td></tr></table></figure></p><p>我这里的python是其中一个出现问题的，如果童鞋在安装软件是出现这个错误按这个方法处理。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这几天在看《揭秘家用路由器0day漏洞挖掘技术》下了ubuntu18.4，感觉Ubuntu还是不错的，发现没有Python2（mmp），安装是出现了Unable to correct problems, you have held broken packages问题（附图一
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://songshanshi.github.io/2018/05/08/hello-world/"/>
    <id>https://songshanshi.github.io/2018/05/08/hello-world/</id>
    <published>2018-05-08T12:38:42.810Z</published>
    <updated>2018-05-08T12:38:42.811Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
